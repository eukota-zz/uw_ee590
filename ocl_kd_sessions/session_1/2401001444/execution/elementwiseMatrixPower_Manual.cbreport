Start:Gx,Gy,Gz,Lx,Ly,Lz,Measurement,Total,Queue,Submit,Execution
1,32,0,0,0,0,Average,1.78268,0.138416,1.48849,0.01875
1,32,0,0,0,0,Median,1.78268,0.138416,1.48849,0.01875
1,32,0,0,0,0,Standard Deviation,0,0,0,0
1,32,0,0,0,0,Minimum,1.78268,0.138416,1.48849,0.01875
1,32,0,0,0,0,Maximum,1.78268,0.138416,1.48849,0.01875
1,32,0,1,1,0,Average,0.39934,0.012416,0.239832,0.018834
1,32,0,1,1,0,Median,0.39934,0.012416,0.239832,0.018834
1,32,0,1,1,0,Standard Deviation,0,0,0,0
1,32,0,1,1,0,Minimum,0.39934,0.012416,0.239832,0.018834
1,32,0,1,1,0,Maximum,0.39934,0.012416,0.239832,0.018834
1,32,0,1,2,0,Average,0.40508,0.013249,0.239333,0.018833
1,32,0,1,2,0,Median,0.40508,0.013249,0.239333,0.018833
1,32,0,1,2,0,Standard Deviation,0,0,0,0
1,32,0,1,2,0,Minimum,0.40508,0.013249,0.239333,0.018833
1,32,0,1,2,0,Maximum,0.40508,0.013249,0.239333,0.018833
1,32,0,1,4,0,Average,0.40262,0.012833,0.235082,0.018583
1,32,0,1,4,0,Median,0.40262,0.012833,0.235082,0.018583
1,32,0,1,4,0,Standard Deviation,0,0,0,0
1,32,0,1,4,0,Minimum,0.40262,0.012833,0.235082,0.018583
1,32,0,1,4,0,Maximum,0.40262,0.012833,0.235082,0.018583
1,32,0,1,8,0,Average,0.43255,0.014749,0.2365,0.022416
1,32,0,1,8,0,Median,0.43255,0.014749,0.2365,0.022416
1,32,0,1,8,0,Standard Deviation,0,0,0,0
1,32,0,1,8,0,Minimum,0.43255,0.014749,0.2365,0.022416
1,32,0,1,8,0,Maximum,0.43255,0.014749,0.2365,0.022416
1,32,0,1,16,0,Average,0.39524,0.013249,0.2375,0.018333
1,32,0,1,16,0,Median,0.39524,0.013249,0.2375,0.018333
1,32,0,1,16,0,Standard Deviation,0,0,0,0
1,32,0,1,16,0,Minimum,0.39524,0.013249,0.2375,0.018333
1,32,0,1,16,0,Maximum,0.39524,0.013249,0.2375,0.018333
1,32,0,1,32,0,Average,0.38376,0.012583,0.233332,0.018417
1,32,0,1,32,0,Median,0.38376,0.012583,0.233332,0.018417
1,32,0,1,32,0,Standard Deviation,0,0,0,0
1,32,0,1,32,0,Minimum,0.38376,0.012583,0.233332,0.018417
1,32,0,1,32,0,Maximum,0.38376,0.012583,0.233332,0.018417
Start:Gx,Gy,Gz,Lx,Ly,Lz,Iteration #,Total,Queue,Submit,Execution
1,32,0,0,0,0,0,1.78268,0.138416,1.48849,0.01875
1,32,0,1,1,0,0,0.39934,0.012416,0.239832,0.018834
1,32,0,1,2,0,0,0.40508,0.013249,0.239333,0.018833
1,32,0,1,4,0,0,0.40262,0.012833,0.235082,0.018583
1,32,0,1,8,0,0,0.43255,0.014749,0.2365,0.022416
1,32,0,1,16,0,0,0.39524,0.013249,0.2375,0.018333
1,32,0,1,32,0,0,0.38376,0.012583,0.233332,0.018417
Start:Gx,Gy,Gz,Lx,Ly,Lz,Name,Read Time,Read Back Time,Input/Output Data
1,32,0,0,0,0,buffer_1a_A,0.06683,0,U:\EE590\github_repo\ocl_kd_sessions\session_1\bin_buffer_1a_A.bin,float*,32,1
1,32,0,0,0,0,buffer_1a_B,0.21443,8.49479,U:/EE590/github_repo/ocl_kd_sessions/session_1/2401001444\execution/pB_config_0_1_0__32_0.dat,float*,32,1
1,32,0,1,1,0,buffer_1a_A,0.06683,0,U:\EE590\github_repo\ocl_kd_sessions\session_1\bin_buffer_1a_A.bin,float*,32,1
1,32,0,1,1,0,buffer_1a_B,0.21443,11.1852,U:/EE590/github_repo/ocl_kd_sessions/session_1/2401001444\execution/pB_config_0_1_1__32_1.dat,float*,32,1
1,32,0,1,2,0,buffer_1a_A,0.06683,0,U:\EE590\github_repo\ocl_kd_sessions\session_1\bin_buffer_1a_A.bin,float*,32,1
1,32,0,1,2,0,buffer_1a_B,0.21443,12.0085,U:/EE590/github_repo/ocl_kd_sessions/session_1/2401001444\execution/pB_config_0_1_1__32_2.dat,float*,32,1
1,32,0,1,4,0,buffer_1a_A,0.06683,0,U:\EE590\github_repo\ocl_kd_sessions\session_1\bin_buffer_1a_A.bin,float*,32,1
1,32,0,1,4,0,buffer_1a_B,0.21443,8.24428,U:/EE590/github_repo/ocl_kd_sessions/session_1/2401001444\execution/pB_config_0_1_1__32_4.dat,float*,32,1
1,32,0,1,8,0,buffer_1a_A,0.06683,0,U:\EE590\github_repo\ocl_kd_sessions\session_1\bin_buffer_1a_A.bin,float*,32,1
1,32,0,1,8,0,buffer_1a_B,0.21443,9.62926,U:/EE590/github_repo/ocl_kd_sessions/session_1/2401001444\execution/pB_config_0_1_1__32_8.dat,float*,32,1
1,32,0,1,16,0,buffer_1a_A,0.06683,0,U:\EE590\github_repo\ocl_kd_sessions\session_1\bin_buffer_1a_A.bin,float*,32,1
1,32,0,1,16,0,buffer_1a_B,0.21443,10.6403,U:/EE590/github_repo/ocl_kd_sessions/session_1/2401001444\execution/pB_config_0_1_1__32_16.dat,float*,32,1
1,32,0,1,32,0,buffer_1a_A,0.06683,0,U:\EE590\github_repo\ocl_kd_sessions\session_1\bin_buffer_1a_A.bin,float*,32,1
1,32,0,1,32,0,buffer_1a_B,0.21443,9.25288,U:/EE590/github_repo/ocl_kd_sessions/session_1/2401001444\execution/pB_config_0_1_1__32_32.dat,float*,32,1
Start:Best,Median
1,32,0,1,32,0,0.38376
Start:Worst,Median
1,32,0,0,0,0,1.78268
Start:Analysis configuraion
(local) EE-361PC18;Intel(R) OpenCL;GPU: Intel(R) HD Graphics 530;true;-cl-std=CL2.0
Start:Report summary
1;32;0;Auto;Auto;0;1
elementwiseMatrixPower_Manual#pA&0&buffer_1a_A;K&3&2;pB&0&buffer_1a_B
Start:Analysis code
__kernel void elementwiseMatrixPower(__global float* pA, unsigned int K, __global float* pB)
{
    const int x     = get_global_id(0);
    const int y     = get_global_id(1);
    const int width = get_global_size(0);

    const int id = y * width + x;
	pB[id] = pow(pA[id],K);
}

__kernel void elementwiseMatrixPower_Manual(__global float* pA, unsigned int K, __global float* pB)
{
    const int x     = get_global_id(0);
    const int y     = get_global_id(1);
    const int width = get_global_size(0);

    const int id = y * width + x;
	float prod = pA[id];
	float out = 1.0;
	for(unsigned int i=0; i<K; i++)
		out = out*prod;
	pB[id] = out;
}

__kernel void progressiveArraySum(__global float* p1b_A, __global float* p1b_B)
{
	const unsigned int id = get_global_id(0);

	float out = 0.0;
	for(unsigned int i=0; i<=id; i++)
		out += p1b_A[i];

	p1b_B[id] = out;
}

